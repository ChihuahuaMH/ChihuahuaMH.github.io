<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chihuahua's Heaven</title><link>https://ChihuahuaMH.github.io/</link><description>Recent content on Chihuahua's Heaven</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Tue, 10 May 2022 02:08:54 +0800</lastBuildDate><atom:link href="https://ChihuahuaMH.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>[Hugo] 自動部屬網站到 GitHub 與 GitHub Pages</title><link>https://ChihuahuaMH.github.io/posts/hugo-%E8%87%AA%E5%8B%95%E9%83%A8%E5%B1%AC%E7%B6%B2%E7%AB%99%E5%88%B0-github-%E8%88%87-github-pages/</link><pubDate>Tue, 10 May 2022 02:08:54 +0800</pubDate><guid>https://ChihuahuaMH.github.io/posts/hugo-%E8%87%AA%E5%8B%95%E9%83%A8%E5%B1%AC%E7%B6%B2%E7%AB%99%E5%88%B0-github-%E8%88%87-github-pages/</guid><description>這是用 Hugo 建立的 Blog，我將 Blog 的原始碼與靜態網頁分別部屬到 GitHub 不同的 repository 中：
Hugo_blog Private 換電腦或檔案不見可以從這個 repo clone 下來使用 GitHub_User/GitHub_User.github.io Public 將生成的靜態網頁（./public）部屬到 GitHub Pages 上 每次寫完文章要部屬到 GitHub，都要輸入一堆指令後推到這兩個 repo，不是很累人嗎？ (╯_╰) 為了減少繁瑣的工作流程，可以利用腳本 deploy.sh 與 GitHub Actions 建立 workflow 達成自動化部屬，省事省力又方便！
Deploy.sh #!/bin/bash set -e echo &amp;#34;✨ Start deploy&amp;#34; msg=&amp;#34;Update on $(date +&amp;#34;%Y.%m.%d&amp;#34;)&amp;#34; if [ -n &amp;#34;$*&amp;#34; ]; then msg=&amp;#34;$*&amp;#34; fi echo &amp;#34;🏃 Running...&amp;#34; git pull git add .</description></item><item><title>[PowerShell] 使用 Oh My Posh 美化樣式</title><link>https://ChihuahuaMH.github.io/posts/powershell-%E4%BD%BF%E7%94%A8-oh-my-posh-%E7%BE%8E%E5%8C%96%E6%A8%A3%E5%BC%8F/</link><pubDate>Tue, 03 May 2022 00:44:13 +0800</pubDate><guid>https://ChihuahuaMH.github.io/posts/powershell-%E4%BD%BF%E7%94%A8-oh-my-posh-%E7%BE%8E%E5%8C%96%E6%A8%A3%E5%BC%8F/</guid><description>一直在追求打造美美的開發環境！在用過 Oh My Zsh 後，也想將 Windows 下的 PowerShell 美化，但出於各種原因遲遲未動工 🥲。
直到這幾天偶然看到 Oh My Posh 的教學，也剛好沒什麼事情，便動起手來打造漂亮的 PowerShell 了！
環境配置 Windows 11 PowerShell 7 安裝過程 安裝 Nerd Font 字型 為了可以正常顯示字型與 icon，可以在 Nerd Fonts 官網挑選自己喜歡的字型安裝。有些字型可以透過粉色按鈕預覽。
私心推薦：
FiraCode Nerd Font JetBrainsMono Nerd Font 修改字型 打開 PowerShell 的設定，並將字型改成剛剛下載的 NF 字型，完成後按儲存。 安裝 Oh My Posh 在 PowerShell 介面下輸入指令安裝：
winget install oh-my-posh 安裝完成後，先在 Oh My Posh 的官網中挑選喜歡的主題。以我這邊為例，挑選的主題是 M365Princess ～
接著在 PowerShell 中輸入指令，準備修改它的設定檔
code $Profile 在打開的設定檔中貼上下面的指令：</description></item><item><title/><link>https://ChihuahuaMH.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ChihuahuaMH.github.io/about/</guid><description>hi</description></item></channel></rss>