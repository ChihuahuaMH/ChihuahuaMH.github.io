<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sumo on ChihuahuaMH</title>
    <link>https://ChihuahuaMH.github.io/tags/sumo/</link>
    <description>Recent content in Sumo on ChihuahuaMH</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 27 Oct 2022 23:12:45 +0800</lastBuildDate><atom:link href="https://ChihuahuaMH.github.io/tags/sumo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Sumo] Manhattan</title>
      <link>https://ChihuahuaMH.github.io/posts/sumo-manhattan/</link>
      <pubDate>Thu, 27 Oct 2022 23:12:45 +0800</pubDate>
      
      <guid>https://ChihuahuaMH.github.io/posts/sumo-manhattan/</guid>
      <description>這篇是參考官網 Manhattan 教學 做一點改變。官方那篇比較偷懶， 是用已經寫好的範例檔 manhattan.netgcfg 和 manhattan.jtrrcfg 生成 Manhattan Mobility Model（MMM），但如果要客製化自己的路網，總不能只依靠範例檔案吧！因此這篇是改成下指令的方式練習並去孰悉用到的工具。
Creating the network 先看原本的 manhattan.netgcfg 作為生成參考：
&amp;lt;grid_network&amp;gt; &amp;lt;grid value=&amp;#34;true&amp;#34;/&amp;gt; &amp;lt;grid.number value=&amp;#34;10&amp;#34;/&amp;gt; &amp;lt;/grid_network&amp;gt; &amp;lt;junctions&amp;gt; &amp;lt;no-turnarounds value=&amp;#34;true&amp;#34;/&amp;gt; &amp;lt;/junctions&amp;gt; 閱讀 netgenerate 的 docs 看看需要下哪些參數，依個人喜好去做一些調整：
netgenerate -g --grid.number 6 --grid.length 300 --no-turnarounds -o manhattan.net.xml 成功後會有一個 manhattan.net.xml ，用 netedit 打開後長這樣子： 當然也可以用 netedit 畫，還有很多種方法都可以生成路網。
Generating vehicles MMM 中的車輛根據指定的 turning ratios 隨機行駛，這個移動類型可以透過 jtrrouter 做到。
jtrrouter 是根據 traffic volumes 和 turning ratios 計算可能使用的路線。 首先要先建立 flow 作為輸入去定義車輛的起點和開始時間。</description>
    </item>
    
    <item>
      <title>[Sumo] Hello SUMO!</title>
      <link>https://ChihuahuaMH.github.io/posts/sumo-hello-sumo/</link>
      <pubDate>Wed, 26 Oct 2022 16:50:01 +0800</pubDate>
      
      <guid>https://ChihuahuaMH.github.io/posts/sumo-hello-sumo/</guid>
      <description>這篇是參考官網 Hello SUMO 教學，以寫 xml 的方式建立路網模擬汽車行駛，加上一些些的補充說明。
Introduction Sumo 中的 street network 是由兩個東西組成的：
nodes（節點，也稱為 junctions） edges（邊，nodes 連接而成的） 本篇要建立的路網是兩條 street，需要 3 個 nodes 和 2 個 edges。下圖是簡單用 NETEDIT 模擬一下：
在開始下面的步驟之前，先建立一個資料夾，全部的東西放在這個資料夾裡面才可以跑模擬。
Nodes 首先要先建立 nodes，每個 node 都有各自的 x 軸 y 軸（代表該節點與原點的距離，以米為單位）和 id。
先在剛才建立的資料夾內新增一個 hello.nod.xml 的檔案，並創建三個節點：
&amp;lt;nodes&amp;gt; &amp;lt;node id=&amp;#34;1&amp;#34; x=&amp;#34;-250.0&amp;#34; y=&amp;#34;0.0&amp;#34; /&amp;gt; &amp;lt;node id=&amp;#34;2&amp;#34; x=&amp;#34;+250.0&amp;#34; y=&amp;#34;0.0&amp;#34; /&amp;gt; &amp;lt;node id=&amp;#34;3&amp;#34; x=&amp;#34;+500.0&amp;#34; y=&amp;#34;0.0&amp;#34; /&amp;gt; &amp;lt;/nodes&amp;gt; ＊node.xml 是 Sumo node files 的後綴
Edges 接著把剛剛建立的節點連接起來！連接的方式很簡單，就是透過每個 node 的 id 作為 reference。</description>
    </item>
    
  </channel>
</rss>
